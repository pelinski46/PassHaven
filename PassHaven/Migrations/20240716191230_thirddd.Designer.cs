// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PassHaven.Data;

#nullable disable

namespace PassHaven.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240716191230_thirddd")]
    partial class thirddd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("PassHaven.Models.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VaultId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VaultId");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("PassHaven.Models.Vault", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MasterPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vaults");
                });

            modelBuilder.Entity("PassHaven.Models.SocialMedia", b =>
                {
                    b.HasOne("PassHaven.Models.Vault", "Vault")
                        .WithMany("SocialMedias")
                        .HasForeignKey("VaultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vault");
                });

            modelBuilder.Entity("PassHaven.Models.Vault", b =>
                {
                    b.Navigation("SocialMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
