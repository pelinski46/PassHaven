@page "/createpasswordentries/{vaultId:int}"
@using PassHaven.Models
@inject PasswordEntriesController controller
@inject VaultController vaultController
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Create password entry</h3>

<div class="container">
    <div>
        <label for="name">Platform Name: </label>
        <input id="name" @bind="@passwordEntry.PlatformName" class="form-control" />
    </div>
    <div>
        <label for="name">Email: </label>
        <input id="name" @bind="@passwordEntry.Email" class="form-control" />
    </div>
    <div>
        <label for="password">Password: </label>
        <input id="password" @bind="@passwordEntry.PasswordHash" class="form-control" type="password" />
    </div>
    @* <div>
        <label for="VaultID">Vault ID: </label>
        <input id="VaultID" @bind="@passwordEntry.VaultId" class="form-control"/>
    </div> *@
    <div>
        <button class="btn btn-primary" @onclick="CreatePasswordEntryAsync">Create</button>
    </div>

</div>





@code {
    private PasswordEntry passwordEntry { get; set; } = new PasswordEntry();
    [Parameter] public int VaultId { get; set; }

    public async Task CreatePasswordEntryAsync()
    {
       
        passwordEntry.VaultId = VaultId;
        await controller.AddPasswordAsync(passwordEntry);
        NavigationManager.NavigateTo("/passwordmanager");

    }
}

<style>
    .container {
        display: flex;
        flex-direction: column; /* Items will be stacked vertically */
    }
</style>
